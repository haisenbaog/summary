1. InnoDB存储引擎。特点：事务、行级锁。
2. 事务的4大特性。原子性、一致性、隔离性、持久性。
3. 事务不考虑隔离性所带来的问题。脏读、不可重复读、幻读，更新丢失。
4. 事务的隔离级别。未提交读，提交读，可重复读，串行。
5. 事务隔离的实现机制。
  读：多版本并发控制MVCC
  写：行锁（表锁）、间隙锁
6. MVCC的实现。
  维护两个隐藏列，一个表示该行的创建版本号，一个表示该行的删除版本号。（版本号：系统版本号或事务版本号，每开启一个事物系统版本号就会加1，这也是该事务的版本号）。
  查询的时候过滤行记录的相应版本号，增删改的时候维护行记录的相应版本号。
7. 行锁的实现。
  依赖索引的使用，通过索引锁定涉及的索引项，进而锁定该索引项所对应的行记录。否则将使用表锁。
8. 间隙锁的实现及其意义。
  进行更新和删除的时候，会锁定更新条件所对应的索引项。（范围条件/具体条件，对应行记录存在/不存在）。
  InnoDB的事务日志（预写日志的方式），按事务提交的顺序保存相关更新命令，在数据恢复/复制的时候或者也按照相同的顺序执行进行恢复
  eg：有一个用户的薪资表，开启一个事务打算将用户id在1-10之间的进行加薪。过程中，有一个新的事务开启，打算插入一条新的用户薪资。由于事务日志的记录及恢复顺序，要求第二个事务要阻塞等待，直到第一个事务提交之后才能继续操作。
---------------------------------------------------------------------------------------------------------------------
1. 索引的优点。可以顺序I/O避免随机I/O，减少服务器需要扫描的数据量，避免使用文件排序、临时表。
2. 索引的分类。B-Tree索引，哈希索引，全文索引。
3. 单列索引，多列复合索引，覆盖索引。
  索引列的独立性，最左列原则，最左前缀原则。
  覆盖索引高效的原因。聚簇索引，索引组织表。表记录的数据结构：B+Tree
---------------------------------------------------------------------------------------------------------------------
1. 分区

2. 分布式事务